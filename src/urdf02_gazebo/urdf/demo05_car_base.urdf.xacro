<robot name="mycar" xmlns:xacro="http://wiki.ros.org/xacro">
<xacro:property name="footprint_radius" value="0.001"/>
<!-- 1.添加一个尺寸极小的link -->
<link name="base_footprint">
  <visual>
   <geometry>
    <sphere radius="${footprint_radius}" />
   </geometry>
  </visual>
 </link>
 <!-- 2.添加底盘 -->
 <!-- 形状:圆柱 
            半径:10     cm 
            高度:8      cm 
            离地:1.5    cm -->
<!-- 2.1link -->
<xacro:property name="base_radius" value="0.1"  />
<xacro:property name="base_length" value="0.08"  />
<xacro:property name="base_mass" value="2"  />

<xacro:property name="lidi" value="0.015"  />
<xacro:property name="base_joint_z" value="${base_length / 2 + lidi}"  />

<link name="base_link">
        <visual>
            <geometry>
                <cylinder radius="${base_radius}" length="${base_length}" />
            </geometry>
            <origin xyz="0 0 0" rpy="0 0 0" />
            <material name="baselink_color">
                <color rgba="0.8 0.3 0.1 0.5" />
            </material>
        </visual>
        <collision>
         <geometry>
                <cylinder radius="${base_radius}" length="${base_length}" />
            </geometry>
            <origin xyz="0 0 0" rpy="0 0 0" />
        </collision>
        <!-- 调用在head.xacro里写好的惯性矩阵函数 -->
        <xacro:cylinder_inertial_matrix m="${base_mass}" r="${base_radius}" h="${base_length}" />
    </link>
    <gazebo reference="base_link">
       <material>Gazebo/Yellow</material>
    </gazebo>

<!-- 2.2joint -->
 <joint name="link2footprint" type="fixed">
        <parent link="base_footprint" />
        <child link="base_link"/>
<!-- 关节z上的设置等于车体高度/2+离地间距 -->
<!-- link的偏移是物体中心与大地坐标系原点的偏移，joint的偏移量是两个link坐标系之间的偏移 -->
        <origin xyz="0 0 0.055" rpy="0 0 0"/>
    </joint>
<xacro:property name="wheel_radius" value="0.0325"  />
<xacro:property name="wheel_length" value="0.015"  />
<xacro:property name="wheel_mass" value="0.05"  />
<xacro:property name="PI" value="3.1415927"  />
<!-- 注意，结果是负数 -->
<!-- wheel_name:left或right
      flag:1或-1 -->
<xacro:property name="wheel_joint_z" value="${(base_length / 2 + lidi - wheel_radius) * -1}"  />
<!-- 3.1link -->
<xacro:macro name="wheel_func" params="wheel_name flag">
<link name="${wheel_name}_wheel">
        <visual>
            <geometry>
                <cylinder radius="${wheel_radius}" length="${wheel_length}" />
            </geometry>
            <origin xyz="0 0 0" rpy="${PI/2} 0 0" />
            <material name="wheel_color">
                <color rgba="0.8 0.3 0.1 0.5" />
            </material>
        </visual>
        <collision>
           <geometry>
                <cylinder radius="${wheel_radius}" length="${wheel_length}" />
            </geometry>
            <origin xyz="0 0 0" rpy="${PI/2} 0 0" />  
        </collision>
        <xacro:cylinder_inertial_matrix m="${wheel_mass}" r="${wheel_radius}" h="${wheel_length}"/>
    </link>
    <gazebo reference="${wheel_name}_wheel">
      <material>Gazebo/Red</material>
      
    </gazebo>

<!-- 3.2joint -->
<joint name="${wheel_name}2link" type="continuous">
        <parent link="base_link" />
        <child link="${wheel_name}_wheel"/>
        <!-- 这里的偏移是父子级之间的位置关系，不是参考的大地，参考父级坐标，判断大小和正负 -->
        <origin xyz="0 ${0.1 * flag} ${wheel_joint_z}" rpy="0 0 0"/>
        <!-- 参考Axes,所以是绕y轴旋转 -->
        <axis xyz="0 1 0" />
    </joint>

</xacro:macro>
<xacro:wheel_func wheel_name="left" flag="1"/>
<xacro:wheel_func wheel_name="right" flag="-1"/>

<xacro:property name="small_wheel_radius" value="0.0075" />
<xacro:property name="small_wheel_mass" value="0.01" />
<xacro:property name="small_joint_z" value="${(base_length/2+lidi-small_wheel_radius)*-1}" />

<xacro:macro name="small_wheel_func" params="small_wheel_name flag">
<!-- 4.1link -->
<link name="${small_wheel_name}_wheel">
<visual>
    <geometry>
        <sphere radius="0.0075" />
    </geometry>
    <origin xyz="0 0 0" rpy="0 0 0" />
    <material name="wheel_color">
        <color rgba="0.8 0.3 0.1 0.5" />
    </material>
</visual>
<collision>
    <geometry>
        <sphere radius="0.0075" />
    </geometry>
    <origin xyz="0 0 0" rpy="0 0 0" />
</collision>
<xacro:sphere_inertial_matrix m="${small_wheel_mass}" r="${small_wheel_radius}"/>
</link>
<gazebo reference="${small_wheel_name}_wheel">
   <material>Gazebo/Red</material>
</gazebo>
    
<!-- 4.2joint -->
<joint name="${small_wheel_name}2link" type="continuous">
        <parent link="base_link" />
        <child link="${small_wheel_name}_wheel"/>
        <!-- 这里的偏移是父子级之间的位置关系，不是参考的大地，参考父级坐标，判断大小和正负 -->
        <origin xyz="${0.08*flag} 0 ${small_joint_z}" rpy="0 0 0"/>
        <!-- 参考Axes,所以是绕y轴旋转 -->
        <axis xyz="0 1 0" />
    </joint>

</xacro:macro>
<xacro:small_wheel_func small_wheel_name="front" flag="1"/>
<xacro:small_wheel_func small_wheel_name="back" flag="-1"/>

</robot>